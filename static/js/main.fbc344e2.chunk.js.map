{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filterdRobots","filter","robot","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAeeA,EAbF,SAACC,GAAW,IACdC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,MAAOC,EAAMH,EAANG,GACpB,OACI,sBAAKC,UAAU,kDAAf,UACI,qBAAKC,IAAI,GAAGC,IAAG,+BAA0BH,EAA1B,cACf,gCACI,6BAAKF,IACL,4BAAIC,WCcLK,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACTC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACpC,OACA,cAAC,EAAD,CAEIT,GAAIK,EAAOI,GAAGT,GACdF,KAAOO,EAAOI,GAAGX,KACjBC,MAAOM,EAAOI,GAAGV,OAHZU,MAQb,OACI,8BACKH,KCFEI,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEXI,EAVA,SAAClB,GACZ,OACI,qBAAKmB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKtB,EAAMuB,YC+CJC,G,wDA3CX,aAAc,IAAD,8BACT,gBAkBJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAlBzC,EAAKC,MAAQ,CACTvB,OAAQ,GACRoB,YAAa,IAJR,E,gEASQ,IAAD,OAChBI,MAAM,8CACLC,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAAAG,GACF,EAAKT,SAAS,CAAEnB,OAAQ4B,S,+BAQvB,IAAD,EAC4BC,KAAKN,MAA7BvB,EADJ,EACIA,OAAQoB,EADZ,EACYA,YAEVU,EAAgB9B,EAAO+B,QAAO,SAAAC,GAChC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAASd,EAAYa,kBAGzD,OACI,sBAAKrC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcuB,KAAKZ,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUjB,OAAQ8B,a,GApCpBK,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCGdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.fbc344e2.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = (props) => {\n    const {name, email, id} = props;\n    return (\n        <div className='tc bg-light-green dib br3 ma2 grow bw2 shadow-5'>\n            <img alt='' src={`https://robohash.org/${id}?200x200`}/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n\nconst CardList = ({robots}) => {\n    const cardComponent = robots.map((user, i) => {\n        return (\n        <Card \n            key={i} \n            id={robots[i].id} \n            name= {robots[i].name} \n            email={robots[i].email}\n            />\n        );\n    }) \n    \n    return (\n        <div>\n            {cardComponent}\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\n\nconst SearchBox = ({searchChange}) => {\n    return (\n        <div className='pa2'>\n            <input \n                className='pa3 ba b--grean bg-lightest-blue'\n                type='search' \n                placeholder='search robots'\n                onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '900px'}}>\n            {props.children}\n        </div>\n    );\n};\n\n\n\nexport default Scroll;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\n\n\n\nclass App extends Component {\n    constructor(){\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response=> {\n            return response.json();\n        })\n        .then(users => {\n            this.setState({ robots: users})\n        });\n    }\n\n    onSearchChange = (event) => {\n        this.setState({searchfield: event.target.value})\n    }\n\n    render(){\n        const { robots, searchfield } = this.state;\n\n        const filterdRobots = robots.filter(robot =>{\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n        })\n\n        return (\n            <div className='tc'>\n                <h1 className='f1' >RoboFriends</h1>\n                <SearchBox searchChange={this.onSearchChange}/>\n                <Scroll>\n                    <CardList robots={filterdRobots}/>\n                </Scroll>\n            </div>\n        );\n    }\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import Card from './Card.js';\n// import CardList from './CardList.js';\nimport App from './containers/App.js'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n// import {robots} from './robots.js'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}